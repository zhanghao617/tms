<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haoyukeji.tms.mapper.TicketMapper">
  <resultMap id="BaseResultMap" type="com.haoyukeji.tms.entity.Ticket">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="ticket_num" jdbcType="VARCHAR" property="ticketNum" />
    <result column="ticket_sum" jdbcType="VARCHAR" property="ticketSum" />
    <result column="ticket_in_time" jdbcType="TIMESTAMP" property="ticketInTime" />
    <result column="ticket_state" jdbcType="VARCHAR" property="ticketState" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="ticket_on_time" jdbcType="TIMESTAMP" property="ticketOnTime" />
    <result column="ticket_start_time" jdbcType="TIMESTAMP" property="ticketStartTime" />
    <result column="ticket_end_time" jdbcType="TIMESTAMP" property="ticketEndTime" />
    <result column="store_account_id" jdbcType="INTEGER" property="storeAccountId" />
    <result column="ticket_in_stock_id" jdbcType="INTEGER" property="ticketInStockId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, state, ticket_num, ticket_sum, ticket_in_time, ticket_state, create_time, update_time, 
    ticket_on_time, ticket_start_time, ticket_end_time, store_account_id, ticket_in_stock_id
  </sql>
  <select id="selectByExample" parameterType="com.haoyukeji.tms.entity.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.haoyukeji.tms.entity.TicketExample">
    delete from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="batchDeleteById">
      delete from tickets
      where id in (
      <foreach collection="idList" item="id" separator=",">
        #{id}
      </foreach>
      )
  </delete>
  <insert id="insert" parameterType="com.haoyukeji.tms.entity.Ticket">
    insert into ticket (id, state, ticket_num, 
      ticket_sum, ticket_in_time, ticket_state, 
      create_time, update_time, ticket_on_time, 
      ticket_start_time, ticket_end_time, store_account_id, 
      ticket_in_stock_id)
    values (#{id,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{ticketNum,jdbcType=VARCHAR}, 
      #{ticketSum,jdbcType=VARCHAR}, #{ticketInTime,jdbcType=TIMESTAMP}, #{ticketState,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{ticketOnTime,jdbcType=TIMESTAMP}, 
      #{ticketStartTime,jdbcType=TIMESTAMP}, #{ticketEndTime,jdbcType=TIMESTAMP}, #{storeAccountId,jdbcType=INTEGER}, 
      #{ticketInStockId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.haoyukeji.tms.entity.Ticket">
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="ticketNum != null">
        ticket_num,
      </if>
      <if test="ticketSum != null">
        ticket_sum,
      </if>
      <if test="ticketInTime != null">
        ticket_in_time,
      </if>
      <if test="ticketState != null">
        ticket_state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="ticketOnTime != null">
        ticket_on_time,
      </if>
      <if test="ticketStartTime != null">
        ticket_start_time,
      </if>
      <if test="ticketEndTime != null">
        ticket_end_time,
      </if>
      <if test="storeAccountId != null">
        store_account_id,
      </if>
      <if test="ticketInStockId != null">
        ticket_in_stock_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="ticketNum != null">
        #{ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="ticketSum != null">
        #{ticketSum,jdbcType=VARCHAR},
      </if>
      <if test="ticketInTime != null">
        #{ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketState != null">
        #{ticketState,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketOnTime != null">
        #{ticketOnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketStartTime != null">
        #{ticketStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketEndTime != null">
        #{ticketEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeAccountId != null">
        #{storeAccountId,jdbcType=INTEGER},
      </if>
      <if test="ticketInStockId != null">
        #{ticketInStockId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
    <insert id="batchInsert">
      insert into ticket (ticket_num, ticket_in_time,ticket_state, create_time)
      values
      <foreach collection="ticketList" item="ticket" separator=",">
        (#{ticket.ticketNum},#{ticket.ticketInTime},#{ticket.ticketState},#{ticket.createTime})
      </foreach>
    </insert>
    <select id="countByExample" parameterType="com.haoyukeji.tms.entity.TicketExample" resultType="java.lang.Long">
      select count(*) from ticket
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
    </select>
  <select id="countByState" resultType="java.util.Map">
    SELECT
    count(*) as total,
    count(case when ticket_state = '已入库' then 1 end) AS in_num,
    count(case when ticket_state = '已下发' then 1 end) AS out_num,
    count(case when ticket_state = '已销售' then 1 end) AS sale_num,
    count(case when ticket_state = '已挂失' then 1 end) AS lost_num,
    count(case when ticket_state = '已过期' then 1 end) AS outtime_num
    FROM
    ticket
  </select>
  <select id="findByBeginNumAndEndNum" resultType="com.haoyukeji.tms.entity.Ticket">
    SELECT
      *
    FROM
      ticket
    WHERE
      ticket_num >= CONVERT(#{beginNum},UNSIGNED INT)
    AND
      ticket_num &lt;= CONVERT(#{endNum},UNSIGNED INT)
  </select>
  <select id="findByBeginNumAndEndNumAndState" resultType="com.haoyukeji.tms.entity.Ticket">
    SELECT
    *
    FROM
    ticket
    WHERE
    ticket_num >= CONVERT(#{beginNum},UNSIGNED INT)
    AND
    ticket_num &lt;= CONVERT(#{endNum},UNSIGNED INT)
    AND
    ticket_state = #{state}
  </select>
  <select id="countByStateAndStoreAccountId" resultType="java.util.Map">
    SELECT
    count(*) as total,
    count(case when ticket_state = '已下发' then 1 end) AS out_num,
    count(case when ticket_state = '已销售' then 1 end) AS sale_num,
    count(case when ticket_state = '已挂失' then 1 end) AS lost_num,
    count(case when ticket_state = '已过期' then 1 end) AS outtime_num
    FROM
    ticket
    where store_account_id = #{storeAccountId}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticket
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketNum != null">
        ticket_num = #{record.ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketSum != null">
        ticket_sum = #{record.ticketSum,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketInTime != null">
        ticket_in_time = #{record.ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticketState != null">
        ticket_state = #{record.ticketState,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticketOnTime != null">
        ticket_on_time = #{record.ticketOnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticketStartTime != null">
        ticket_start_time = #{record.ticketStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticketEndTime != null">
        ticket_end_time = #{record.ticketEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeAccountId != null">
        store_account_id = #{record.storeAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.ticketInStockId != null">
        ticket_in_stock_id = #{record.ticketInStockId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket
    set id = #{record.id,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      ticket_num = #{record.ticketNum,jdbcType=VARCHAR},
      ticket_sum = #{record.ticketSum,jdbcType=VARCHAR},
      ticket_in_time = #{record.ticketInTime,jdbcType=TIMESTAMP},
      ticket_state = #{record.ticketState,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      ticket_on_time = #{record.ticketOnTime,jdbcType=TIMESTAMP},
      ticket_start_time = #{record.ticketStartTime,jdbcType=TIMESTAMP},
      ticket_end_time = #{record.ticketEndTime,jdbcType=TIMESTAMP},
      store_account_id = #{record.storeAccountId,jdbcType=INTEGER},
      ticket_in_stock_id = #{record.ticketInStockId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.haoyukeji.tms.entity.Ticket">
    update ticket
    <set>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="ticketNum != null">
        ticket_num = #{ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="ticketSum != null">
        ticket_sum = #{ticketSum,jdbcType=VARCHAR},
      </if>
      <if test="ticketInTime != null">
        ticket_in_time = #{ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketState != null">
        ticket_state = #{ticketState,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketOnTime != null">
        ticket_on_time = #{ticketOnTime,jdbcType=VARCHAR},
      </if>
      <if test="ticketStartTime != null">
        ticket_start_time = #{ticketStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketEndTime != null">
        ticket_end_time = #{ticketEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeAccountId != null">
        store_account_id = #{storeAccountId,jdbcType=INTEGER},
      </if>
      <if test="ticketInStockId != null">
        ticket_in_stock_id = #{ticketInStockId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haoyukeji.tms.entity.Ticket">
    update ticket
    set state = #{state,jdbcType=VARCHAR},
      ticket_num = #{ticketNum,jdbcType=VARCHAR},
      ticket_sum = #{ticketSum,jdbcType=VARCHAR},
      ticket_in_time = #{ticketInTime,jdbcType=TIMESTAMP},
      ticket_state = #{ticketState,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      ticket_on_time = #{ticketOnTime,jdbcType=TIMESTAMP},
      ticket_start_time = #{ticketStartTime,jdbcType=TIMESTAMP},
      ticket_end_time = #{ticketEndTime,jdbcType=TIMESTAMP},
      store_account_id = #{storeAccountId,jdbcType=INTEGER},
      ticket_in_stock_id = #{ticketInStockId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>